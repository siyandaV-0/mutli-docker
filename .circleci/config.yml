version: 2.1
executors:
  docker-publisher:
    docker:
      - image: cimg/base:stable
jobs:
  before-install:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "Build react-test image"
          command: |
            docker build -t siyandav0/react-test -f ./client/Dockerfile.dev ./client
      - run:
          name: "Archive Docker Image"
          command: docker save -o image.tar siyandav0/react-test
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  script:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: "Load archived Docker image"
          command: docker load -i /tmp/workspace/image.tar 
      - run:
          name: "run tests on react-test image"
          command: |
            docker run -e CI=true siyandav0/react-test npm test
      
  after-success:
    executor: docker-publisher
    steps:  
      - checkout
      - setup_remote_docker  
      - run:
          name: "Build and Publish Docker Images"
          command: |
            docker build -t siyandav0/multi-client ./client
            docker build -t siyandav0/multi-nginx ./nginx
            docker build -t siyandav0/multi-server ./server
            docker build -t siyandav0/multi-worker ./worker
      - run:
          name: "Login to the docker CLI"
          command: |
            echo "$DOCKER_PASSWORD" | docker login -u  "$DOCKER_ID" --password-stdin
      - run:
          name: "Take those images and push them to docker hub"
          command: |      
            docker push siyandav0/multi-client
            docker push siyandav0/multi-nginx
            docker push siyandav0/multi-server
            docker push siyandav0/multi-worker

workflows:
  version: 2
  test-build-push:
    jobs:
      - before-install:
          filters:
            branches:
              only: master
      - script:
          requires:
            - before-install
          filters:
            branches:
              only: master
      - after-success:
          requires:
            - script
          filters:
            branches:
              only: master
